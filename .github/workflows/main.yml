name: Main

on:
  push:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:

    - name: Checkout Code
      uses: actions/checkout@v3

    # Build & Test Frontend
    - name: Use Node.js 16.16.0
      uses: actions/setup-node@v3
      with:
        node-version: 16.16.0
        cache: 'yarn'

    - name: Install Dependencies
      run: yarn install

    - name: Build Frontend
      run: yarn build && ls -lah

    # Build & Publish Docker Container
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        role-duration-seconds: 3600
        aws-region: us-east-1

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Set env
      run: echo "IMAGE_TAG=$(node -e "console.log(require('./package.json').version)")" >> $GITHUB_ENV

    - name: Build, tag, and push docker image to Amazon ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: todo-frontend
      run: |
        DOCKER_BUILDKIT=1 docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

#    - name: Install Octopus CLI
#      uses: OctopusDeploy/install-octopus-cli-action@v1.1.8
#      with:
#        version: latest
#
#    - name: Create and deploy release
#      uses: OctopusDeploy/create-release-action@v1.1.1
#      with:
#        api_key: ${{ secrets.OCTOPUSSERVERAPIKEY }}
#        server: ${{ secrets.OCTOPUSSERVERURL }}
#        space: ${{ secrets.OCTOPUSSERVER_SPACE }}
#        project: "TODO Frontend SNAPSHOT"
#        deploy_to: "DEV"
#        progress: true